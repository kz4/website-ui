{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;AAMA;;;;AACA;;AACA;;;;AAEA;;AACA;;;;AACA;;AAEA;;AACA;;;;;;;;+eAfA;;;;;;AASA;;AAIA;;;IAIa,qB,WAAA,qB;;;;;;;;;;;AAAoD;6BACtD;AACP,aACE;AAAA;AAAA;AACE;AACE,iBAAM,uBADR;AAEE,gBAAM,CACJ,EAAE,MAAM,aAAR,EAAuB,SAAS,sCAAhC,EADI;AAFR,UADF;AAOE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,2BAAU;AADZ;AAGE;AAAA;AAAA;AAAA;AAAA,eAHF;AAIE;AACE,0BAAU,KAAK,KAAL,CAAW,QADvB;AAEE,mCAAmB,KAAK,KAAL,CAAW;AAFhC,gBAJF;AAQE,wEAAa,QAAb;AARF,aADF;AAWE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAEE;AACE,sBAAK,MADP;AAEE,uBAAO,KAAK,KAAL,CAAW;AAFpB;AAFF,aAXF;AAqBE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,eADF;AAEE;AACA,sBAAO,MADP;AAEA,uBAAO,KAAK,KAAL,CAAW,YAFlB,GAFF;AAOE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,iBADF;AAEE,6EAAa,gBAAe,UAA5B,EAAuC,OAAO,KAAK,KAAL,CAAW,kBAAzD;AAFF;AAPF;AArBF;AADF;AAPF,OADF;AA8CD;;;;EAhDwC,gBAAM,a;;AAmDjD,sBAAsB,SAAtB,GAAkC;AAChC,YAAU,iBAAU,IAAV,CAAe;AADO,CAAlC;;AAIA,IAAM,kBAAkB,wCAAyB;AAC/C,YAAU,oCADqC;AAE/C,SAAO,iCAFwC;AAG/C,gBAAc,kCAHiC;AAI/C,sBAAoB;AAJ2B,CAAzB,CAAxB;;AAOA,SAAS,kBAAT,CAA4B,QAA5B,EAAsC;AACpC,SAAO;AACL,sBADK;AAEL,qBAAiB,yBAAC,WAAD;AAAA,aAAiB,SAAS,wCAA0B,WAA1B,CAAT,CAAjB;AAAA;AAFZ,GAAP;AAID;;kBAEc,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,qBAA7C,C","file":"index-compiled.js","sourcesContent":["/*\n *\n * CreateEditProjectPage\n *\n */\n\nimport React, { PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\n// import { FormattedMessage } from 'react-intl';\nimport { createStructuredSelector } from 'reselect';\nimport MetaDataInput from './MetaDataInput';\nimport { makeSelectMetaData, makeSelectImage, makeProjectTitle, makeProjectdescription} from './selectors';\n// import messages from './messages';\nimport { FormGroup, ControlLabel, FormControl } from 'react-bootstrap';\nimport { makeMetaDataUpdatedAction } from './actions';\n\nexport class CreateEditProjectPage extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n  render() {\n    return (\n      <div>\n        <Helmet\n          title=\"CreateEditProjectPage\"\n          meta={[\n            { name: 'description', content: 'Description of CreateEditProjectPage' },\n          ]}\n        />\n        <div>\n          <form>\n            <FormGroup\n              controlId=\"formBasicText\"\n            >\n              <ControlLabel>MetaData:</ControlLabel>\n              <MetaDataInput\n                metaData={this.props.metaData}\n                onMetaDataUpdated={this.props.metaDataUpdated}\n              />\n              <FormControl.Feedback />\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>Image</ControlLabel>\n              <FormControl\n                type=\"text\"\n                value={this.props.image}\n              />\n\n\n            </FormGroup>\n\n            <FormGroup>\n              <ControlLabel>Project Title</ControlLabel>\n              <FormControl\n              type = \"text\"\n              value={this.props.projectTitle}>\n              </FormControl>\n\n              <FormGroup>\n                <ControlLabel>Project Description</ControlLabel>\n                <FormControl componentClass=\"textarea\" value={this.props.projectDescription}></FormControl>\n              </FormGroup>\n            </FormGroup>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nCreateEditProjectPage.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  metaData: makeSelectMetaData(),\n  image: makeSelectImage(),\n  projectTitle: makeProjectTitle(),\n  projectDescription: makeProjectdescription(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    metaDataUpdated: (newMetaData) => dispatch(makeMetaDataUpdatedAction(newMetaData))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEditProjectPage);\n"]}